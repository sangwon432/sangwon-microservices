version: "3"
services:
  user-db:
    container_name: user_db
    image: postgres:latest
    ports:
      - "5433:5432"  # Mapping host port 5433 to container port 5432
    volumes:
      - user-db:/var/lib/postgresql/data
    env_file:
      - ./user-service/.env
    networks:
      - microservices-network

  product-db:
    container_name: product_db
    image: postgres:latest
    ports:
      - "5434:5432"  # Mapping host port 5434 to container port 5432
    volumes:
      - product-db:/var/lib/postgresql/data
    env_file:
      - ./product-service/.env
    networks:
      - microservices-network

  user-service:
    build:
      dockerfile: Dockerfile
      context: ./user-service
      target: development
    volumes:
      - ./user-service:/usr/src/app
    ports:
      - "8001:8001"
    env_file:
      - ./user-service/.env
    depends_on:
      - user-db
    command: npm run start:dev
    networks:
      - microservices-network

  product-service:
    build:
      dockerfile: Dockerfile
      context: ./product-service
      target: development
    volumes:
      - ./product-service:/usr/src/app
    ports:
      - "8002:8002"
    env_file:
      - ./product-service/.env
    depends_on:
      - product-db
    command: npm run start:dev
    networks:
      - microservices-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - user-service
      - product-service
    networks:
      - microservices-network

volumes:
  user-db:
  product-db:

networks:
  microservices-network:
    driver: bridge


#version: "3"
#services:
#  user-db:
#    container_name: user_db
#    image: postgres:latest
#    ports:
#      - "5433:5433"
#    volumes:
#      - user-db:/var/lib/postgresql/data
#    env_file:
#      - ./user-service/.env
#    networks:
#      - microservices-network
#
#  product-db:
#    container_name: product_db
#    image: postgres:latest
#    ports:
#      - "5434:5434"
#    volumes:
#      - product-db:/var/lib/postgresql/data
#    env_file:
#      - ./product-service/.env
#    networks:
#      - microservices-network
#
#  user-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./user-service
#      target: development
#    volumes:
#      - ./user-service:/usr/src/app
#    ports:
#      - "8001:8001"
#    env_file:
#      - ./user-service/.env
#    depends_on:
#      - user-db
#    command: npm run start:dev
#    networks:
#      - microservices-network
#
#  product-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./product-service
#      target: development
#    volumes:
#      - ./product-service:/usr/src/app
#    ports:
#      - "8002:8002"
#    env_file:
#      - ./product-service/.env
#    depends_on:
#      - product-db
#    command: npm run start:dev
#    networks:
#      - microservices-network
#
#  nginx:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - user-service
#      - product-service
#    networks:
#      - microservices-network
#
#volumes:
#  user-db:
#  product-db:
#
#networks:
#  microservices-network:
#    driver: bridge


#version: "3"
#services:
#  user-db:
#    container_name: user_db
#    image: postgres:latest
#    ports:
#      - "5433:5432"
#    volumes:
#      - user-db:/var/lib/postgresql/data
#    env_file:
#      - ./user-service/.env
#    networks:
#      - microservices-network
#
#  product-db:
#    container_name: product_db
#    image: postgres:latest
#    ports:
#      - "5434:5432"
#    volumes:
#      - product-db:/var/lib/postgresql/data
#    env_file:
#      - ./product-service/.env
#    networks:
#      - microservices-network
#
#  user-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./user-service
#      target: development
#    volumes:
#      - ./user-service:/usr/src/app
#    ports:
#      - "8001:8001"
#    env_file:
#      - ./user-service/.env
#    depends_on:
#      - user-db
#    command: npm run start:dev
#    networks:
#      - microservices-network
#
#  product-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./product-service
#      target: development
#    volumes:
#      - ./product-service:/usr/src/app
#    ports:
#      - "8002:8002"
#    env_file:
#      - ./product-service/.env
#    depends_on:
#      - product-db
#    command: npm run start:dev
#    networks:
#      - microservices-network
#
#  nginx:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    ports:
##      - 80:80
#      - 443:443
#    depends_on:
#      - user-service
#      - product-service
#    networks:
#      - microservices-network
#
#volumes:
#  user-db:
#  product-db:
#
#networks:
#  microservices-network:
#    driver: bridge


#
#version: "3"
#services:
#  user-db:
#    container_name: user_db
#    image: postgres:latest
#    ports:
#      - "5433:5432"
#    volumes:
#      - user-db:/var/lib/postgresql/data
#    env_file:
#      - ./user-service/.env
#
#  product-db:
#    container_name: product_db
#    image: postgres:latest
#    ports:
#      - "5434:5432"
#    volumes:
#      - product-db:/var/lib/postgresql/data
#    env_file:
#      - ./product-service/.env
#
#  user-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./user-service
#      target: development
#    volumes:
#      - ./user-service:/usr/src/app
#    ports:
#      - "8001:8001"
#    env_file:
#      - ./user-service/.env
#    depends_on:
#      - user-db
#    command: npm run start:dev
#
#  product-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./product-service
#      target: development
#    volumes:
#      - ./product-service:/usr/src/app
#    ports:
#      - "8002:8002"
#    env_file:
#      - ./product-service/.env
#    depends_on:
#      - product-db
#    command: npm run start:dev
#
#volumes:
#  user-db:
#  product-db: